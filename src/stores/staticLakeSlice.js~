import { createSlice, } from '@reduxjs/toolkit'
const initialState = {
  information: {},
  seriePath: {},
}

const files = import.meta.glob('/src/series/*/*')
const data = Object.entries(files).map(([, data]) => data)
const allSeriesFromSrc = []
for (const item of data) {
  allSeriesFromSrc.push(item.name.replace('/src', '.'))
}

export const staticLakeSlice = createSlice({
  name: 'information',
  initialState,
  reducers: {
    addInformation: (state, action) => {
      const { id, info } = action.payload

      if (!state.information[id]) {
        state.information[id] = info
      }

      allSeriesFromSrc.forEach(item => {
        const regex = /\/(\d+)\//
        const idFromItem = item.match(regex)[1]
          state.seriePath[idFromItem] = {
            ...state.seriePath[idFromItem],
            item,
        }
      })

    },
  },
})

export const { addInformation } = staticLakeSlice.actions

export default staticLakeSlice.reducer
